{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"id\"];\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"spinner-border\",\n  role: \"status\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"sr-only\"\n}, \"Loading...\")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"button\", {\n    id: $props.name,\n    class: _normalizeClass(['btn-save', `color-${$props.colorName}-bg`, 'color-text-card-balance']),\n    type: \"button\",\n    loading: true\n  }, [_hoisted_2, _createTextVNode(\" \" + _toDisplayString($props.label), 1 /* TEXT */)], 10 /* CLASS, PROPS */, _hoisted_1)]);\n}","map":{"version":3,"mappings":";;gCAQMA,oBAEM;EAFDC,KAAK,EAAC,gBAAgB;EAACC,IAAI,EAAC;iBAC/BF,oBAAuC;EAAjCC,KAAK,EAAC;AAAS,GAAC,YAAU;;;uBARtCE,oBAYM,cAXJH,oBAUS;IATJI,EAAE,EAAEC,WAAI;IACRJ,KAAK,wCAAwBI,gBAAS;IACvCC,IAAI,EAAC,QAAQ;IACZC,OAAO,EAAE;MAEZC,UAEM,sBACN,oBAAGH,YAAK","names":["_createElementVNode","class","role","_createElementBlock","id","$props","type","loading","_hoisted_2"],"sourceRoot":"","sources":["C:\\laragon\\www\\vue\\titobu-v2\\src\\components\\app\\form\\BaseButton.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <button\r\n        :id=\"name\"\r\n        :class=\"['btn-save', `color-${colorName}-bg`, 'color-text-card-balance']\"\r\n        type=\"button\"\r\n        :loading=\"true\"\r\n    >\r\n      <div class=\"spinner-border\" role=\"status\">\r\n        <span class=\"sr-only\">Loading...</span>\r\n      </div>\r\n      {{ label }}\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"BaseButton.vue\",\r\n  data() {\r\n    return {\r\n\r\n    }\r\n  },\r\n  props: {\r\n    name: {\r\n      type: String\r\n    },\r\n    label: {\r\n      type: String\r\n    },\r\n    colorName: {\r\n      type: String,\r\n      default: 'grey'\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}