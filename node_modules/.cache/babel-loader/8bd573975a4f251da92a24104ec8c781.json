{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"top-card-title color-text-card-balance d-flex justify-content-center align-items-center\"\n};\nconst _hoisted_2 = {\n  class: \"top-card-description color-text-card-balance d-flex justify-content-center align-items-center\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(`color-${$props.bg}-bg`),\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('update:modelValue', $props.value))\n  }, [_createElementVNode(\"span\", _hoisted_1, _toDisplayString($props.title1), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_2, _toDisplayString($props.title2), 1 /* TEXT */)], 2 /* CLASS */);\n}","map":{"version":3,"mappings":";;EAEYA,KAAK,EAAC;AAAyF;;EAEjGA,KAAK,EAAC;AAA+F;;uBAH3GC,oBAIM;IAJAD,KAAK,2BAAWE,SAAE;IAAQC,OAAK,sCAAEC,UAAK,sBAAsBF,YAAK;MACrEG,oBAAyH,QAAzHC,UAAyH,mBAAhBJ,aAAM,kBAC/GG,oBAC6H,QAD7HE,UAC6H,mBAAhBL,aAAM","names":["class","_createElementBlock","$props","onClick","_ctx","_createElementVNode","_hoisted_1","_hoisted_2"],"sourceRoot":"","sources":["C:\\laragon\\www\\vue\\titobu-v2\\src\\components\\app\\cube\\BaseCube.vue"],"sourcesContent":["<template>\r\n    <div :class=\"`color-${bg}-bg`\" @click=\"$emit('update:modelValue', value)\">\r\n      <span class=\"top-card-title color-text-card-balance d-flex justify-content-center align-items-center\">{{ title1 }}</span>\r\n      <span\r\n          class=\"top-card-description color-text-card-balance d-flex justify-content-center align-items-center\">{{ title2 }}</span>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"BaseCube.vue\",\r\n  props: {\r\n    title1: {\r\n      type: [String, Number],\r\n      default: 'Example'\r\n    },\r\n    title2: {\r\n      type: [String, Number],\r\n      default: ''\r\n    },\r\n    bg: {\r\n      type: String,\r\n      default: 'grey'\r\n    },\r\n    value: {\r\n      type: String,\r\n      default: null\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}