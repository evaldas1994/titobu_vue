{"ast":null,"code":"import { mapActions } from 'vuex';\nexport default {\n  name: \"BaseButton.vue\",\n  data() {\n    return {};\n  },\n  props: {\n    name: {\n      type: String\n    },\n    label: {\n      type: String\n    },\n    colorName: {\n      type: String,\n      default: 'grey'\n    },\n    loading: {\n      type: Array,\n      default: () => []\n    }\n  },\n  methods: {\n    ...mapActions(['isLoading', 'setLoading', 'unsetLoading']),\n    checkLoading() {\n      let valuesArray = ['loading1', 'loading2'];\n      let result = this.isLoading(valuesArray);\n      console.log(result);\n      return Promise.all(result).then(results => {\n        return results;\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAmBA,SAASA,UAAS,QAAS,MAAK;AAEhC,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,IAAI,GAAG;IACL,OAAO,CAEP;EACF,CAAC;EACDC,KAAK,EAAE;IACLF,IAAI,EAAE;MACJG,IAAI,EAAEC;IACR,CAAC;IACDC,KAAK,EAAE;MACLF,IAAI,EAAEC;IACR,CAAC;IACDE,SAAS,EAAE;MACTH,IAAI,EAAEC,MAAM;MACZG,OAAO,EAAE;IACX,CAAC;IACDC,OAAO,EAAE;MACPL,IAAI,EAAEM,KAAK;MACXF,OAAO,EAAE,MAAM;IACjB;EACF,CAAC;EACDG,OAAO,EAAE;IACP,GAAGX,UAAU,CAAC,CACZ,WAAW,EACX,YAAY,EACZ,cAAc,CACf,CAAC;IACFY,YAAY,GAAG;MACb,IAAIC,WAAU,GAAI,CAAC,UAAU,EAAE,UAAU,CAAC;MAC1C,IAAIC,MAAK,GAAI,IAAI,CAACC,SAAS,CAACF,WAAW,CAAC;MACxCG,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;MACnB,OAAOI,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC,CAACM,IAAI,CAACC,OAAM,IAAK;QACzC,OAAOA,OAAO;MAChB,CAAC,CAAC;IACJ;EACF;AACF","names":["mapActions","name","data","props","type","String","label","colorName","default","loading","Array","methods","checkLoading","valuesArray","result","isLoading","console","log","Promise","all","then","results"],"sourceRoot":"","sources":["C:\\laragon\\www\\vue\\titobu-v2\\src\\components\\app\\form\\BaseButton.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    {{checkLoading()}}\r\n    <button\r\n        :class=\"[\r\n            'btn-save',\r\n            `color-${colorName}-bg`,\r\n            'color-text-card-balance'\r\n          ]\"\r\n        type=\"button\"\r\n        :disabled=\"this.isLoading([name])\"\r\n    >\r\n      <span v-if=\"this.isLoading([name])\" class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n      <span v-else>{{ label }}</span>\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from 'vuex'\r\n\r\nexport default {\r\n  name: \"BaseButton.vue\",\r\n  data() {\r\n    return {\r\n\r\n    }\r\n  },\r\n  props: {\r\n    name: {\r\n      type: String\r\n    },\r\n    label: {\r\n      type: String\r\n    },\r\n    colorName: {\r\n      type: String,\r\n      default: 'grey'\r\n    },\r\n    loading: {\r\n      type: Array,\r\n      default: () => []\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions([\r\n      'isLoading',\r\n      'setLoading',\r\n      'unsetLoading',\r\n    ]),\r\n    checkLoading() {\r\n      let valuesArray = ['loading1', 'loading2'];\r\n      let result = this.isLoading(valuesArray);\r\n      console.log(result);\r\n      return Promise.all(result).then(results => {\r\n        return results;\r\n      });\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}