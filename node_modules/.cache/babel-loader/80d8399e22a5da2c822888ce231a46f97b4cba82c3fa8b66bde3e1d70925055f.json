{"ast":null,"code":"import axios from \"axios\";\nimport { mapActions } from 'vuex';\nimport { mapGetters } from 'vuex';\nimport BaseGrid from '@/components/app/grid/BaseGrid.vue';\nimport BaseCube from '@/components/app/cube/BaseCube.vue';\nimport BaseInput from '@/components/app/form/BaseInput.vue';\nimport BaseSelect from '@/components/app/form/BaseSelect.vue';\nimport BaseButton from '@/components/app/form/BaseButton.vue';\nimport BaseIcon from '@/components/app/icon/BaseIcon.vue';\nimport BaseModal from '@/components/app/modal/BaseModal.vue';\nexport default {\n  name: \"EarningPage\",\n  components: {\n    BaseGrid,\n    BaseCube,\n    BaseInput,\n    BaseSelect,\n    BaseButton,\n    BaseIcon,\n    BaseModal\n  },\n  data() {\n    return {\n      action: null,\n      focus: null,\n      errors: {},\n      model: {},\n      gridData: [],\n      total: [],\n      earningByCategory: []\n    };\n  },\n  computed: {\n    ...mapGetters(['isLoading', 'loading', 'formatAmount']),\n    modelEdit() {\n      if (this.focus) {\n        let focus = this.focus;\n        return this.gridData.find(function (obj) {\n          return obj.id === focus;\n        });\n      }\n      return null;\n    }\n  },\n  methods: {\n    ...mapActions(['setLoading', 'unsetLoading', 'setNotification']),\n    setAxiosParams() {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('bearer_token')}`;\n      axios.defaults.headers.common['Content-Type'] = 'application/json';\n      axios.defaults.headers.common['Accept'] = 'application/json';\n    },\n    save() {\n      this.setLoading(['save']);\n      this.resetErrors();\n      axios.post(`${this.baseUrl}/api/transfers`, this.model).then(response => {\n        this.data = response.data;\n        this.setModelDefaults();\n        this.setNotification({\n          'type': 'success',\n          'message': 'Sukurta sėkmingai'\n        });\n      }).catch(error => {\n        this.errors = error.response.data.errors;\n        this.setNotification({\n          'type': 'error',\n          'message': 'Nesukurta'\n        });\n      }).finally(() => {\n        this.getEarningByCategory();\n        this.unsetLoading(['save']);\n        this.getGridData();\n      });\n    },\n    getEarningByCategory() {\n      this.setLoading(['earning-by-category', 'save']);\n      axios.get(`${this.baseUrl}/api/analytics/earning-by-category`).then(response => {\n        console.log(response.data);\n        this.total = response.data.total;\n        this.earningByCategory = response.data.data;\n      }).finally(() => {\n        this.unsetLoading(['earning-by-category', 'save']);\n      });\n    },\n    getGridData() {\n      this.setLoading(['earning-by-category-grid']);\n      axios.get(`${this.baseUrl}/api/transfers`).then(response => {\n        this.gridData = response.data.data;\n      }).finally(() => {\n        this.unsetLoading(['earning-by-category-grid']);\n      });\n    },\n    setModelDefaults() {\n      this.model.amount = null;\n      this.model.name = null;\n    },\n    resetErrors() {\n      this.errors = {};\n    }\n  },\n  mounted() {\n    this.setAxiosParams();\n    this.getEarningByCategory();\n    this.getGridData();\n    this.setModelDefaults();\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","mapActions","mapGetters","BaseGrid","BaseCube","BaseInput","BaseSelect","BaseButton","BaseIcon","BaseModal","name","components","data","action","focus","errors","model","gridData","total","earningByCategory","computed","modelEdit","find","obj","id","methods","setAxiosParams","defaults","headers","common","localStorage","getItem","save","setLoading","resetErrors","post","baseUrl","then","response","setModelDefaults","setNotification","catch","error","finally","getEarningByCategory","unsetLoading","getGridData","get","console","log","amount","mounted"],"sourceRoot":"","sources":["C:\\laragon\\www\\vue\\titobu-v2\\src\\components\\pages\\EarningPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <div class=\"container\">\r\n        <!--        Top Title-->\r\n        <div class=\"row mt-10px\">\r\n          <div class=\"top-text d-flex justify-content-center align-items-center color-green-icon text-center\"><span>{{ formatAmount(total) }}</span></div>\r\n        </div>\r\n\r\n        <!--        Cube-->\r\n        <div class=\"row\">\r\n          <div v-for=\"(item, index) in earningByCategory\"\r\n               :key=\"index\"\r\n               class=\"col-4 mt-10px\"\r\n          >\r\n            <base-cube\r\n                :title1=\"item.name.toUpperCase()\"\r\n                :title2=\"formatAmount(item.amount)\"\r\n                :bg=\"item.color\"\r\n                @click=\"model.category_id=item.id\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <!--        Divider-->\r\n        <div class=\"row mt-30px\">\r\n          <div class=\"col-12\">\r\n            <div class=\"divider\"/>\r\n          </div>\r\n        </div>\r\n\r\n        <!--        Form-->\r\n        <div class=\"row mt-30px\">\r\n          <div class=\"col-6\">\r\n            <base-input\r\n                name=\"amount\"\r\n                v-model=\"model.amount\"\r\n                label=\"Suma\"\r\n                :model=\"model\"\r\n                :errors=\"errors\"\r\n            />\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <base-select\r\n                name=\"category_id\"\r\n                v-model=\"model.category_id\"\r\n                label=\"Šaltinis\"\r\n                :options=\"earningByCategory\"\r\n                :errors=\"errors\"\r\n                :model=\"model\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row mt-10px\">\r\n          <div class=\"col-12\">\r\n            <base-input\r\n                name=\"name\"\r\n                v-model=\"model.name\"\r\n                label=\"Komentaras\"\r\n                :model=\"model\"\r\n                :errors=\"errors\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row mt-10px\">\r\n          <div class=\"col-6\">\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <base-button\r\n                name=\"save\"\r\n                label=\"Saugoti\"\r\n                color-name=\"green\"\r\n                @click=\"save()\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <!--        Divider-->\r\n        <div class=\"row mt-30px\">\r\n          <div class=\"col-12\">\r\n            <div class=\"divider\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        <!--        Grid-->\r\n        <div class=\"row mt-30px\">\r\n          <div class=\"col-12\">\r\n            <base-grid\r\n                :items=\"gridData\"\r\n                :headers=\"['Nr.', 'Šaltinis', 'Komentaras', 'Suma']\"\r\n                :columns=\"['id', 'category_name', 'name', 'amount']\"\r\n            >\r\n              <template #edit=\"{ item }\">\r\n                <base-icon\r\n                    icon=\"fa-regular fa-pen-to-square\"\r\n                    color-name=\"blue\"\r\n                    class=\"pe-2\"\r\n                    @click=\"focus=item.id\"\r\n                    data-bs-toggle=\"modal\" data-bs-target=\"#edit\"\r\n                />\r\n              </template>\r\n              <template #delete=\"{ item }\">\r\n                <base-icon\r\n                    icon=\"fa-solid fa-trash-can\"\r\n                    color-name=\"blue\"\r\n                    class=\"pe-2\"\r\n                    @click=\"focus=item.id\"\r\n                    data-bs-toggle=\"modal\" data-bs-target=\"#delete\"\r\n                />\r\n              </template>\r\n            </base-grid>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!--    modals-->\r\n    <base-modal\r\n        id=\"edit\"\r\n        title=\"Redaguoti\"\r\n    >\r\n      <template #content v-if=\"modelEdit\">\r\n        <!--        Form-->\r\n        <div class=\"row mt-30px\">\r\n          <div class=\"col-6\">\r\n            <base-input\r\n                name=\"name\"\r\n                v-model=\"modelEdit.name\"\r\n                label=\"Pavadinimas\"\r\n                :model=\"modelEdit\"\r\n                :errors=\"errors\"\r\n            />\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <base-select\r\n                name=\"type\"\r\n                v-model=\"modelEdit.type\"\r\n                label=\"Tipas\"\r\n                :options=\"types\"\r\n                :errors=\"errors\"\r\n                :model=\"modelEdit\"\r\n                value=\"value\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row mt-10px\">\r\n          <div class=\"col-3\">\r\n            <label class=\"form-label\">Rezultatas:</label>\r\n            <div class=\"container card-32-no-shadow \">\r\n              <div class=\"row icon-32 text-center\">\r\n                <base-icon\r\n                    :icon=\"modelEdit.icon\"\r\n                    :color-name=\"modelEdit.color\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-9\">\r\n            <div class=\"container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-6 ps-0\">\r\n                  <label class=\"form-label\">Paveikslėlis:</label>\r\n                  <div\r\n                      class=\"card-32 color-text-card-balance d-flex align-items-center overflow-scroll hide-scrollbar-1 hide-scrollbar-2 bg-body\">\r\n                    <div\r\n                        v-for=\"(icon, index) in icons\"\r\n                        :key=\"index\"\r\n                    >\r\n                      <base-icon\r\n                          :icon=\"icon\"\r\n                          color-name=\"black\"\r\n                          class=\"px-2\"\r\n                          @click=\"modelEdit.icon = icon\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <small v-if=\"errors['icon']\" class=\"font-italic error\">Blogai įvestas laukas!</small>\r\n                </div>\r\n                <div class=\"col-6 pe-0\">\r\n                  <label class=\"form-label\">Spalva:</label>\r\n                  <div class=\"card-32 d-flex align-items-center overflow-scroll hide-scrollbar-1 hide-scrollbar-2  bg-body\">\r\n                    <div v-for=\"(color, index) in colors\" :key=\"index\">\r\n                      <base-icon\r\n                          icon=\"fa-solid fa-circle\"\r\n                          :color-name=\"color\"\r\n                          class=\"px-2\"\r\n                          @click=\"modelEdit.color = color\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <small v-if=\"errors['color']\" class=\"font-italic error\">Blogai įvestas laukas!</small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </template>\r\n\r\n      <template #close>\r\n        <base-button\r\n            data-bs-dismiss=\"modal\"\r\n            name=\"save\"\r\n            label=\"Grįžti\"\r\n            color-name=\"blue\"\r\n        />\r\n      </template>\r\n      <template #submit>\r\n        <base-button\r\n            data-bs-dismiss=\"modal\"\r\n            name=\"save\"\r\n            label=\"Saugoti\"\r\n            color-name=\"red\"\r\n            @click=\"update()\"\r\n        />\r\n      </template>\r\n    </base-modal>\r\n    <base-modal\r\n        id=\"delete\"\r\n        title=\"Ar tikrai norite ištrinti?\"\r\n    >\r\n      <template #content>\r\n        <base-grid\r\n            v-if=\"modelEdit\"\r\n            :items=\"[modelEdit]\"\r\n            :headers=\"['Nr.', 'Pavadinimas', 'Tipas', 'Paveikslėlis', 'Spalva']\"\r\n            :columns=\"['id', 'name', 'type_name', 'icon', 'color_name']\"\r\n        />\r\n      </template>\r\n\r\n      <template #close>\r\n        <base-button\r\n            data-bs-dismiss=\"modal\"\r\n            name=\"save\"\r\n            label=\"Ne\"\r\n            color-name=\"blue\"\r\n        />\r\n      </template>\r\n      <template #submit>\r\n        <base-button\r\n            data-bs-dismiss=\"modal\"\r\n            name=\"save\"\r\n            label=\"Taip\"\r\n            color-name=\"red\"\r\n            @click=\"deleteItem()\"\r\n        />\r\n      </template>\r\n    </base-modal>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nimport { mapActions } from 'vuex'\r\nimport { mapGetters } from 'vuex'\r\n\r\nimport BaseGrid from '@/components/app/grid/BaseGrid.vue';\r\nimport BaseCube from '@/components/app/cube/BaseCube.vue';\r\nimport BaseInput from '@/components/app/form/BaseInput.vue';\r\nimport BaseSelect from '@/components/app/form/BaseSelect.vue';\r\nimport BaseButton from '@/components/app/form/BaseButton.vue';\r\nimport BaseIcon from '@/components/app/icon/BaseIcon.vue';\r\nimport BaseModal from '@/components/app/modal/BaseModal.vue';\r\n\r\nexport default {\r\n  name: \"EarningPage\",\r\n  components: {\r\n    BaseGrid,\r\n    BaseCube,\r\n    BaseInput,\r\n    BaseSelect,\r\n    BaseButton,\r\n    BaseIcon,\r\n    BaseModal,\r\n  },\r\n  data() {\r\n    return {\r\n      action: null,\r\n      focus: null,\r\n      errors: {},\r\n      model: {},\r\n      gridData: [],\r\n      total: [],\r\n      earningByCategory: [],\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'isLoading',\r\n      'loading',\r\n      'formatAmount',\r\n    ]),\r\n\r\n    modelEdit() {\r\n      if (this.focus) {\r\n        let focus = this.focus;\r\n        return this.gridData.find(function( obj ) {\r\n          return obj.id === focus;\r\n        });\r\n      }\r\n\r\n      return null;\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions([\r\n      'setLoading',\r\n      'unsetLoading',\r\n      'setNotification',\r\n    ]),\r\n\r\n    setAxiosParams() {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('bearer_token')}`;\r\n      axios.defaults.headers.common['Content-Type'] = 'application/json'\r\n      axios.defaults.headers.common['Accept'] = 'application/json'\r\n    },\r\n    save() {\r\n      this.setLoading(['save'])\r\n      this.resetErrors();\r\n\r\n      axios\r\n          .post(`${this.baseUrl}/api/transfers`, this.model)\r\n          .then(response => {\r\n            this.data = response.data\r\n\r\n            this.setModelDefaults();\r\n            this.setNotification({\r\n              'type':'success',\r\n              'message':'Sukurta sėkmingai'\r\n            })\r\n          })\r\n          .catch(error => {\r\n            this.errors = error.response.data.errors;\r\n\r\n            this.setNotification({\r\n              'type':'error',\r\n              'message':'Nesukurta'\r\n            })\r\n          })\r\n          .finally(() => {\r\n            this.getEarningByCategory();\r\n            this.unsetLoading(['save'])\r\n            this.getGridData();\r\n          })\r\n    },\r\n    getEarningByCategory() {\r\n      this.setLoading(['earning-by-category', 'save'])\r\n\r\n      axios\r\n          .get(`${this.baseUrl}/api/analytics/earning-by-category`)\r\n          .then(response => {\r\n            console.log(response.data);\r\n            this.total = response.data.total\r\n            this.earningByCategory = response.data.data\r\n          })\r\n          .finally(() => {\r\n            this.unsetLoading(['earning-by-category', 'save'])\r\n          })\r\n    },\r\n    getGridData() {\r\n      this.setLoading(['earning-by-category-grid'])\r\n\r\n      axios\r\n          .get(`${this.baseUrl}/api/transfers`)\r\n          .then(response => {\r\n            this.gridData = response.data.data\r\n          })\r\n          .finally(() => {\r\n            this.unsetLoading(['earning-by-category-grid'])\r\n          })\r\n    },\r\n    setModelDefaults() {\r\n      this.model.amount = null;\r\n      this.model.name = null;\r\n    },\r\n    resetErrors() {\r\n      this.errors = {};\r\n    },\r\n  },\r\n  mounted() {\r\n    this.setAxiosParams();\r\n    this.getEarningByCategory();\r\n    this.getGridData();\r\n    this.setModelDefaults();\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.top-text {\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  font-size: 64px;\r\n  line-height: 77px;\r\n  display: flex;\r\n  align-items: center;\r\n  text-align: center;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}