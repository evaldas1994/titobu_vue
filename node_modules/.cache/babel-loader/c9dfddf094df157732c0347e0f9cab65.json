{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"for\"];\nconst _hoisted_2 = [\"id\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"label\", {\n    for: $props.name,\n    class: \"form-label\"\n  }, \"Pavadinimas:\", 8 /* PROPS */, _hoisted_1), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: _normalizeClass($options.inputClass),\n    id: $props.name,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.value = $event),\n    onInput: _cache[1] || (_cache[1] = $event => _ctx.$emit(`update:modelValue[${$props.name}]`, $event.target.value))\n  }, null, 42 /* CLASS, PROPS, HYDRATE_EVENTS */, _hoisted_2), [[_vModelText, _ctx.value]]), _createCommentVNode(\"    <small v-if=\\\"errors['name']\\\" class=\\\"font-italic error\\\">Blogas pavadinimas.</small>\")]);\n}","map":{"version":3,"mappings":";;;;uBACEA,oBAUM,cATJC,oBAA0D;IAAlDC,GAAG,EAAEC,WAAI;IAAEC,KAAK,EAAC;KAAa,cAAY,8CAClDH,oBAMC;IALGI,IAAI,EAAC,MAAM;IACVD,KAAK,kBAAEE,mBAAU;IACjBC,EAAE,EAAEJ,WAAI;+DACAK,UAAK;IACbC,OAAK,sCAAED,UAAK,sBAAsBL,WAAI,KAAKO,MAAM,CAACC,MAAM,CAACC,KAAK;8EADtDJ,UAAK,KAGtBK,iHAA6F","names":["_createElementBlock","_createElementVNode","for","$props","class","type","$options","id","_ctx","onInput","$event","target","value","_createCommentVNode"],"sourceRoot":"","sources":["C:\\laragon\\www\\vue\\titobu-v2\\src\\components\\app\\form\\BaseInput.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <label :for=\"name\" class=\"form-label\">Pavadinimas:</label>\r\n    <input\r\n        type=\"text\"\r\n        :class=\"inputClass\"\r\n        :id=\"name\"\r\n        v-model=\"value\"\r\n        @input=\"$emit(`update:modelValue[${name}]`, $event.target.value)\"\r\n    >\r\n<!--    <small v-if=\"errors['name']\" class=\"font-italic error\">Blogas pavadinimas.</small>-->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"BaseInput.vue\",\r\n  props: {\r\n    name: {\r\n      type: String\r\n    },\r\n    errors: {\r\n      type: Object,\r\n      default: () => {}\r\n      },\r\n    // model: {\r\n    //   type: Object,\r\n    // },\r\n    // bg: {\r\n    //   type: String,\r\n    //   default: 'grey'\r\n    // },\r\n  },\r\n  computed: {\r\n    inputClass() {\r\n      return ['form-control form-field', this.errors.length ? 'error' : null].join(' ')\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}