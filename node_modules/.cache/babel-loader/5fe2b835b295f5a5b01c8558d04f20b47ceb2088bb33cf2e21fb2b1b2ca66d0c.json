{"ast":null,"code":"import axios from \"axios\";\nimport { mapActions } from 'vuex';\nimport { mapGetters } from 'vuex';\nimport BaseGrid from '@/components/app/grid/BaseGrid.vue';\nimport BaseCube from '@/components/app/cube/BaseCube.vue';\nimport BaseInput from '@/components/app/form/BaseInput.vue';\nimport BaseSelect from '@/components/app/form/BaseSelect.vue';\nimport BaseButton from '@/components/app/form/BaseButton.vue';\nexport default {\n  name: \"PeriodCategoryPage\",\n  components: {\n    BaseGrid,\n    BaseCube,\n    BaseInput,\n    BaseSelect,\n    BaseButton\n  },\n  data() {\n    return {\n      errors: {},\n      model: {},\n      gridData: [{\n        id: 2,\n        name: '2023-01',\n        period: '2023-01',\n        category: 'Maistas',\n        limit: '120.00'\n      }, {\n        id: 1,\n        name: '2023-01',\n        period: '2023-01',\n        category: 'Mokesčiai',\n        limit: '510.00'\n      }],\n      periodByCategory: []\n    };\n  },\n  computed: {\n    ...mapGetters(['isLoading', 'loading', 'thisPeriod', 'nextPeriod', 'formatAmount']),\n    categories() {\n      const found = this.periodByCategory.find(element => element.id === this.model.period);\n      return found ? found.categories : [];\n    },\n    categoriesWithoutBalance() {\n      const found = this.periodByCategory.find(element => element.id === this.model.period);\n      return found ? found.categories_without_balance : [];\n    }\n  },\n  methods: {\n    ...mapActions(['setLoading', 'unsetLoading', 'setNotification']),\n    setAxiosParams() {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('bearer_token')}`;\n      axios.defaults.headers.common['Content-Type'] = 'application/json';\n      axios.defaults.headers.common['Accept'] = 'application/json';\n    },\n    save() {\n      this.setLoading(['save']);\n      this.resetErrors();\n      axios.post(`${this.baseUrl}/api/period-categories`, this.model).then(response => {\n        this.data = response.data;\n        this.setModelDefaults();\n        this.setNotification({\n          'type': 'success',\n          'message': 'Sukurta sėkmingai'\n        });\n      }).catch(error => {\n        this.errors = error.response.data.errors;\n        this.setNotification({\n          'type': 'error',\n          'message': 'Nesukurta'\n        });\n      }).finally(() => {\n        this.getPeriodByCategory();\n        this.unsetLoading(['save']);\n        this.getGridData();\n      });\n    },\n    getPeriodByCategory() {\n      this.setLoading(['period-by-category', 'save']);\n      axios.get(`${this.baseUrl}/api/analytics/period-by-category`).then(response => {\n        console.log(response.data.data);\n        this.periodByCategory = response.data.data;\n        this.model.period = response.data.data[0].id;\n      }).finally(() => {\n        this.unsetLoading(['period-by-category', 'save']);\n      });\n    },\n    getGridData() {\n      this.setLoading(['period-by-category-grid']);\n      axios.get(`${this.baseUrl}/api/period-categories`).then(response => {\n        console.log(response.data.data);\n        this.gridData = response.data.data;\n      }).finally(() => {\n        this.unsetLoading(['period-by-category-grid']);\n      });\n    },\n    setModelDefaults() {\n      this.model.limit = null;\n    },\n    resetErrors() {\n      this.errors = {};\n    }\n  },\n  mounted() {\n    this.setAxiosParams();\n    this.getPeriodByCategory();\n    this.getGridData();\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","mapActions","mapGetters","BaseGrid","BaseCube","BaseInput","BaseSelect","BaseButton","name","components","data","errors","model","gridData","id","period","category","limit","periodByCategory","computed","categories","found","find","element","categoriesWithoutBalance","categories_without_balance","methods","setAxiosParams","defaults","headers","common","localStorage","getItem","save","setLoading","resetErrors","post","baseUrl","then","response","setModelDefaults","setNotification","catch","error","finally","getPeriodByCategory","unsetLoading","getGridData","get","console","log","mounted"],"sourceRoot":"","sources":["C:\\laragon\\www\\vue\\titobu-v2\\src\\components\\pages\\PeriodCategoryPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <div class=\"container\">\r\n        <!--        Top Title-->\r\n        <div class=\"row mt-10px\">\r\n          <div class=\"top-text d-flex justify-content-center align-items-center color-text-title text-center\">Kategorijų limitai pagal laikotarpius</div>\r\n        </div>\r\n\r\n        <!--        Cube-->\r\n        <div class=\"row mt-10px\">\r\n          <div v-for=\"(item) in periodByCategory\"\r\n               :key=\"item.id\"\r\n               class=\"col-6\"\r\n          >\r\n            <base-cube\r\n                :title1=\"item.period\"\r\n                :title2=\"`${formatAmount(item.balance)} (${item.count})`\"\r\n                bg=\"red\"\r\n                :loading=\"isLoading(['period-by-category'])\"\r\n                @click=\"model.period=item.id\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row mt-20px\" v-if=\"categories.length > 0\">\r\n          <div\r\n              v-for=\"(item, index) in categories\"\r\n              :key=\"index\"\r\n              class=\"col-4 mt-10px\">\r\n            <base-cube\r\n                :title1=\"item.name.toUpperCase()\"\r\n                :title2=\"formatAmount(item.pivot.limit)\"\r\n                :bg=\"item.color\"\r\n                :loading=\"isLoading(['period-by-category'])\"\r\n                @click=\"model.limit=formatAmount(item.pivot.limit); model.category=item.id;\"\r\n            />\r\n          </div>\r\n          <div class=\"row mt-20px flex-nowrap overflow-scroll\" v-if=\"categoriesWithoutBalance.length > 0\">\r\n            <div\r\n                v-for=\"(item, index) in categoriesWithoutBalance\"\r\n                :key=\"index\"\r\n                class=\"w-auto mt-10px\">\r\n              <base-cube\r\n                  :title1=\"item.name.toUpperCase()\"\r\n                  :bg=\"item.color\"\r\n                  :loading=\"isLoading(['period-by-category'])\"\r\n                  class=\" px-2\"\r\n                  @click=\"model.limit=formatAmount(0); model.category=item.id;\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!--        Divider-->\r\n        <div class=\"row mt-30px\">\r\n          <div class=\"col-12\">\r\n            <div class=\"divider\"/>\r\n          </div>\r\n        </div>\r\n\r\n        <!--        Form-->\r\n        <div class=\"row mt-30px\">\r\n          <div class=\"col-6\">\r\n            <base-input\r\n                name=\"limit\"\r\n                v-model=\"model.limit\"\r\n                label=\"Limitas\"\r\n                :model=\"model\"\r\n                :errors=\"errors\"\r\n            />\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <base-select\r\n                name=\"period\"\r\n                v-model=\"model.period\"\r\n                label=\"Laikotarpis\"\r\n                text=\"period\"\r\n                :options=\"periodByCategory\"\r\n                :errors=\"errors\"\r\n                :model=\"model\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row mt-10px\">\r\n          <div class=\"col-6\">\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <base-select\r\n                name=\"category\"\r\n                v-model=\"model.category\"\r\n                label=\"Kategorija\"\r\n                :options=\"categories\"\r\n                :errors=\"errors\"\r\n                :model=\"model\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row mt-10px\">\r\n          <div class=\"col-6\">\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <base-button\r\n                name=\"save\"\r\n                label=\"Saugoti\"\r\n                color-name=\"green\"\r\n                @click=\"save()\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <!--        Divider-->\r\n        <div class=\"row mt-30px\">\r\n          <div class=\"col-12\">\r\n            <div class=\"divider\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        <!--        Grid-->\r\n        <div class=\"row mt-30px\">\r\n          <div class=\"col-12\">\r\n            <base-grid\r\n                :items=\"gridData\"\r\n                :headers=\"['Nr.', 'Laikotarpis', 'Kategorija', 'Limitas']\"\r\n                :columns=\"['id', 'period_period', 'category_name', 'limit']\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nimport { mapActions } from 'vuex'\r\nimport { mapGetters } from 'vuex'\r\n\r\nimport BaseGrid from '@/components/app/grid/BaseGrid.vue';\r\nimport BaseCube from '@/components/app/cube/BaseCube.vue';\r\nimport BaseInput from '@/components/app/form/BaseInput.vue';\r\nimport BaseSelect from '@/components/app/form/BaseSelect.vue';\r\nimport BaseButton from '@/components/app/form/BaseButton.vue';\r\n\r\nexport default {\r\n  name: \"PeriodCategoryPage\",\r\n  components: {\r\n    BaseGrid,\r\n    BaseCube,\r\n    BaseInput,\r\n    BaseSelect,\r\n    BaseButton,\r\n  },\r\n  data() {\r\n    return {\r\n      errors: {},\r\n      model: {},\r\n      gridData: [\r\n        {\r\n          id: 2,\r\n          name: '2023-01',\r\n          period: '2023-01',\r\n          category: 'Maistas',\r\n          limit: '120.00',\r\n        },\r\n        {\r\n          id: 1,\r\n          name: '2023-01',\r\n          period: '2023-01',\r\n          category: 'Mokesčiai',\r\n          limit: '510.00',\r\n        },\r\n      ],\r\n      periodByCategory: [],\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'isLoading',\r\n      'loading',\r\n      'thisPeriod',\r\n      'nextPeriod',\r\n      'formatAmount',\r\n    ]),\r\n\r\n    categories() {\r\n        const found = this.periodByCategory.find(element => element.id === this.model.period);\r\n\r\n        return found ? found.categories : [];\r\n    },\r\n    categoriesWithoutBalance() {\r\n      const found = this.periodByCategory.find(element => element.id === this.model.period);\r\n\r\n      return found ? found.categories_without_balance : [];\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions([\r\n      'setLoading',\r\n      'unsetLoading',\r\n      'setNotification',\r\n    ]),\r\n\r\n    setAxiosParams() {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('bearer_token')}`;\r\n      axios.defaults.headers.common['Content-Type'] = 'application/json'\r\n      axios.defaults.headers.common['Accept'] = 'application/json'\r\n    },\r\n    save() {\r\n      this.setLoading(['save'])\r\n      this.resetErrors();\r\n\r\n      axios\r\n          .post(`${this.baseUrl}/api/period-categories`, this.model)\r\n          .then(response => {\r\n            this.data = response.data\r\n\r\n            this.setModelDefaults();\r\n            this.setNotification({\r\n              'type':'success',\r\n              'message':'Sukurta sėkmingai'\r\n            })\r\n          })\r\n          .catch(error => {\r\n            this.errors = error.response.data.errors;\r\n\r\n            this.setNotification({\r\n              'type':'error',\r\n              'message':'Nesukurta'\r\n            })\r\n          })\r\n          .finally(() => {\r\n            this.getPeriodByCategory();\r\n            this.unsetLoading(['save'])\r\n            this.getGridData();\r\n          })\r\n    },\r\n    getPeriodByCategory() {\r\n      this.setLoading(['period-by-category', 'save'])\r\n\r\n      axios\r\n          .get(`${this.baseUrl}/api/analytics/period-by-category`)\r\n          .then(response => {\r\n            console.log(response.data.data)\r\n            this.periodByCategory = response.data.data\r\n            this.model.period = response.data.data[0].id;\r\n          })\r\n          .finally(() => {\r\n            this.unsetLoading(['period-by-category', 'save'])\r\n          })\r\n    },\r\n    getGridData() {\r\n      this.setLoading(['period-by-category-grid'])\r\n\r\n      axios\r\n          .get(`${this.baseUrl}/api/period-categories`)\r\n          .then(response => {\r\n            console.log(response.data.data)\r\n            this.gridData = response.data.data\r\n          })\r\n          .finally(() => {\r\n            this.unsetLoading(['period-by-category-grid'])\r\n          })\r\n    },\r\n    setModelDefaults() {\r\n      this.model.limit = null;\r\n    },\r\n    resetErrors() {\r\n      this.errors = {};\r\n    },\r\n  },\r\n  mounted() {\r\n    this.setAxiosParams();\r\n    this.getPeriodByCategory();\r\n    this.getGridData();\r\n  },\r\n}\r\n</script>\r\n\r\n<style>\r\n.custom {\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n\r\n  background: linear-gradient(180deg, #0047FF 0%, #000000 100%);\r\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n}\r\n\r\n\r\n.gradient-icon {\r\n  /*background: #fff;*/\r\n  background: rgb(119, 79, 79, 1);\r\n  color: rgba(255, 0, 0, 1);\r\n}\r\n\r\n\r\n.top-card-title {\r\n  width: 100%;\r\n  height: 21px;\r\n\r\n  font-style: normal;\r\n  font-size: 13px;\r\n  line-height: 16px;\r\n}\r\n\r\n.top-card-description {\r\n  width: 100%;\r\n  height: 21px;\r\n\r\n  font-style: normal;\r\n  font-size: 15px;\r\n  line-height: 18px;\r\n}\r\n\r\n.fa-gradient {\r\n  background: -webkit-gradient(linear, left top, left bottom, from(#f00), to(#333));\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}