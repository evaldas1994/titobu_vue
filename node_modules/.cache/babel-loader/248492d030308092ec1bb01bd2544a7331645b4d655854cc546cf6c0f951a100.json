{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-98f0f958\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"for\", \"id\"];\nconst _hoisted_2 = [\"id\", \"aria-label\", \"disabled\"];\nconst _hoisted_3 = [\"value\", \"selected\"];\nconst _hoisted_4 = {\n  key: 0,\n  class: \"font-italic error\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"label\", {\n    for: $props.name,\n    id: $props.name,\n    class: \"form-label\"\n  }, _toDisplayString($props.label) + \":\", 9, _hoisted_1), _createElementVNode(\"select\", {\n    id: $props.name,\n    class: _normalizeClass($options.selectClass),\n    \"aria-label\": $props.name,\n    disabled: $props.disabled,\n    onInput: _cache[0] || (_cache[0] = $event => _ctx.$emit('update:modelValue', $event.target.value))\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.options, (option, index) => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: index,\n      value: option[$props.value],\n      selected: $props.model[$props.name] === option[$props.value]\n    }, _toDisplayString(option[$props.text]), 9, _hoisted_3);\n  }), 128))], 42, _hoisted_2), $props.errors['type'] ? (_openBlock(), _createElementBlock(\"small\", _hoisted_4, \"Blogai įvestas laukas!\")) : _createCommentVNode(\"\", true)]);\n}","map":{"version":3,"mappings":";;;;;;;EAkBiCA,KAAK,EAAC;;;uBAjBrCC,oBAkBM,cAjBJC,oBAAqE;IAA7DC,GAAG,EAAEC,WAAI;IAAGC,EAAE,EAAED,WAAI;IAAEJ,KAAK,EAAC;sBAAgBI,YAAK,IAAG,GAAC,kBAC7DF,oBAcS;IAbJG,EAAE,EAAED,WAAI;IACRJ,KAAK,kBAAEM,oBAAW;IAClB,YAAU,EAAEF,WAAI;IACVG,QAAQ,EAAEH,eAAQ;IACxBI,OAAK,sCAAEC,UAAK,sBAAsBC,MAAM,CAACC,MAAM,CAACC,KAAK;yBAExDX,oBAMSY,6BALqBT,cAAO,GAAzBU,MAAM,EAAEC,KAAK;yBADzBd,oBAMS;MAJJe,GAAG,EAAED,KAAK;MAAGH,KAAK,EAAEE,MAAM,CAACV,YAAK;MAChCa,QAAQ,EAAEb,YAAK,CAACA,WAAI,MAAMU,MAAM,CAACV,YAAK;wBAEtCU,MAAM,CAACV,WAAI;+BAGLA,aAAM,0BAAnBH,oBAAqF,SAArFiB,UAAqF,EAA9B,wBAAsB","names":["class","_createElementBlock","_createElementVNode","for","$props","id","$options","disabled","onInput","_ctx","$event","target","value","_Fragment","option","index","key","selected","_hoisted_4"],"sourceRoot":"","sources":["C:\\laragon\\www\\vue\\titobu-v2\\src\\components\\app\\form\\BaseSelect.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <label :for=\"name\" :id=\"name\" class=\"form-label\">{{ label }}:</label>\r\n    <select\r\n        :id=\"name\"\r\n        :class=\"selectClass\"\r\n        :aria-label=\"name\"\r\n        v-bind:disabled=\"disabled\"\r\n        @input=\"$emit('update:modelValue', $event.target.value)\"\r\n    >\r\n      <option\r\n          v-for=\"(option, index) in options\"\r\n          :key=\"index\" :value=\"option[value]\"\r\n          :selected=\"model[name] === option[value]\"\r\n      >\r\n        {{ option[text] }}\r\n      </option>\r\n    </select>\r\n    <small v-if=\"errors['type']\" class=\"font-italic error\">Blogai įvestas laukas!</small>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"BaseSelect.vue\",\r\n  props: {\r\n    name: {\r\n      type: String\r\n    },\r\n    label: {\r\n      type: String\r\n    },\r\n    options: {\r\n      type: Object,\r\n    },\r\n    errors: {\r\n      type: Object,\r\n      default: () => {}\r\n    },\r\n    model: {\r\n      type: Object,\r\n    },\r\n    value: {\r\n      type: String,\r\n      default: 'id'\r\n    },\r\n    text: {\r\n      type: String,\r\n      default: 'name'\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false,\r\n    }\r\n  },\r\n  computed: {\r\n    selectClass() {\r\n      return ['form-control form-field form-select', this.errors.length ? 'error' : null].join(' ')\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nselect {\r\n  overflow-y: auto;\r\n  max-height: 50px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}