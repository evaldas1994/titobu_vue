{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = [\"disabled\"];\nconst _hoisted_2 = {\n  key: 0,\n  class: \"spinner-border spinner-border-sm\",\n  role: \"status\",\n  \"aria-hidden\": \"true\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"button\", {\n    class: _normalizeClass(['btn-save', `color-${$props.colorName}-bg`, 'color-text-card-balance']),\n    type: \"button\",\n    disabled: $options.isLoading($props.loading, [$props.name])\n  }, [$options.isLoading($props.loading, [$props.name]) ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_3, _toDisplayString($props.label), 1 /* TEXT */))], 10 /* CLASS, PROPS */, _hoisted_1)]);\n}","map":{"version":3,"mappings":";;;;EAW8CA,KAAK,EAAC,kCAAkC;EAACC,IAAI,EAAC,QAAQ;EAAC,aAAW,EAAC;;;;;;uBAV/GC,oBAaM,cAZJC,oBAWS;IAVJH,KAAK,wCAAmDI,gBAAS;IAKlEC,IAAI,EAAC,QAAQ;IACZC,QAAQ,EAAEC,kBAAS,CAACH,cAAO,GAAGA,WAAI;MAEzBG,kBAAS,CAACH,cAAO,GAAGA,WAAI,oBAApCF,oBAAyH,QAAzHM,UAAyH,oBACzHN,oBAA+B,qCAAfE,YAAK","names":["class","role","_createElementBlock","_createElementVNode","$props","type","disabled","$options","_hoisted_2"],"sourceRoot":"","sources":["C:\\laragon\\www\\vue\\titobu-v2\\src\\components\\app\\form\\BaseButton.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <button\r\n        :class=\"[\r\n            'btn-save',\r\n            `color-${colorName}-bg`,\r\n            'color-text-card-balance'\r\n          ]\"\r\n        type=\"button\"\r\n        :disabled=\"isLoading(loading, [name])\"\r\n    >\r\n      <span v-if=\"isLoading(loading, [name])\" class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n      <span v-else>{{ label }}</span>\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"BaseButton.vue\",\r\n  data() {\r\n    return {\r\n\r\n    }\r\n  },\r\n  props: {\r\n    name: {\r\n      type: String\r\n    },\r\n    label: {\r\n      type: String\r\n    },\r\n    colorName: {\r\n      type: String,\r\n      default: 'grey'\r\n    },\r\n    loading: {\r\n      type: Array,\r\n      default: () => []\r\n    }\r\n  },\r\n  methods: {\r\n    isLoading(valuesArray) {\r\n      return this.$store.state.loading.some(val => valuesArray.includes(val));\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}