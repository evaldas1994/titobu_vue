{"ast":null,"code":"import { mapActions } from 'vuex';\nexport default {\n  name: \"BaseButton.vue\",\n  data() {\n    return {};\n  },\n  props: {\n    name: {\n      type: String\n    },\n    label: {\n      type: String\n    },\n    colorName: {\n      type: String,\n      default: 'grey'\n    },\n    loading: {\n      type: Array,\n      default: () => []\n    }\n  },\n  methods: {\n    ...setLoading(['increment',\n    // map `this.increment()` to `this.$store.dispatch('increment')`\n\n    // `mapActions` also supports payloads:\n    'incrementBy' // map `this.incrementBy(amount)` to `this.$store.dispatch('incrementBy', amount)`\n    ]),\n\n    ...mapActions({\n      add: 'increment' // map `this.add()` to `this.$store.dispatch('increment')`\n    })\n  },\n\n  methods: {\n    isLoading(valuesArray) {\n      return this.$store.state.loading.some(val => valuesArray.includes(val));\n    }\n  }\n};","map":{"version":3,"mappings":"AAkBA,SAASA,UAAS,QAAS,MAAK;AAEhC,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,IAAI,GAAG;IACL,OAAO,CAEP;EACF,CAAC;EACDC,KAAK,EAAE;IACLF,IAAI,EAAE;MACJG,IAAI,EAAEC;IACR,CAAC;IACDC,KAAK,EAAE;MACLF,IAAI,EAAEC;IACR,CAAC;IACDE,SAAS,EAAE;MACTH,IAAI,EAAEC,MAAM;MACZG,OAAO,EAAE;IACX,CAAC;IACDC,OAAO,EAAE;MACPL,IAAI,EAAEM,KAAK;MACXF,OAAO,EAAE,MAAM;IACjB;EACF,CAAC;EACDG,OAAO,EAAE;IACP,GAAGC,UAAU,CAAC,CACZ,WAAW;IAAE;;IAEb;IACA,aAAY,CAAE;IAAA,CACf,CAAC;;IACF,GAAGZ,UAAU,CAAC;MACZa,GAAG,EAAE,WAAU,CAAE;IACnB,CAAC;EACH,CAAC;;EACDF,OAAO,EAAE;IACPG,SAAS,CAACC,WAAW,EAAE;MACrB,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACR,OAAO,CAACS,IAAI,CAACC,GAAE,IAAKJ,WAAW,CAACK,QAAQ,CAACD,GAAG,CAAC,CAAC;IACzE;EACF;AACF","names":["mapActions","name","data","props","type","String","label","colorName","default","loading","Array","methods","setLoading","add","isLoading","valuesArray","$store","state","some","val","includes"],"sourceRoot":"","sources":["C:\\laragon\\www\\vue\\titobu-v2\\src\\components\\app\\form\\BaseButton.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <button\r\n        :class=\"[\r\n            'btn-save',\r\n            `color-${colorName}-bg`,\r\n            'color-text-card-balance'\r\n          ]\"\r\n        type=\"button\"\r\n        :disabled=\"isLoading(loading, [name])\"\r\n    >\r\n      <span v-if=\"isLoading(loading, [name])\" class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n      <span v-else>{{ label }}</span>\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from 'vuex'\r\n\r\nexport default {\r\n  name: \"BaseButton.vue\",\r\n  data() {\r\n    return {\r\n\r\n    }\r\n  },\r\n  props: {\r\n    name: {\r\n      type: String\r\n    },\r\n    label: {\r\n      type: String\r\n    },\r\n    colorName: {\r\n      type: String,\r\n      default: 'grey'\r\n    },\r\n    loading: {\r\n      type: Array,\r\n      default: () => []\r\n    }\r\n  },\r\n  methods: {\r\n    ...setLoading([\r\n      'increment', // map `this.increment()` to `this.$store.dispatch('increment')`\r\n\r\n      // `mapActions` also supports payloads:\r\n      'incrementBy' // map `this.incrementBy(amount)` to `this.$store.dispatch('incrementBy', amount)`\r\n    ]),\r\n    ...mapActions({\r\n      add: 'increment' // map `this.add()` to `this.$store.dispatch('increment')`\r\n    })\r\n  },\r\n  methods: {\r\n    isLoading(valuesArray) {\r\n      return this.$store.state.loading.some(val => valuesArray.includes(val));\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}