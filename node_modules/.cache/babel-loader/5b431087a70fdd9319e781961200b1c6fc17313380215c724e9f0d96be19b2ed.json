{"ast":null,"code":"import { mapActions } from 'vuex';\nimport { mapGetters } from 'vuex';\nimport BaseGrid from '@/components/app/grid/BaseGrid.vue';\nimport BaseCube from '@/components/app/cube/BaseCube.vue';\nimport BaseInput from '@/components/app/form/BaseInput.vue';\nimport BaseSelect from '@/components/app/form/BaseSelect.vue';\nimport BaseButton from '@/components/app/form/BaseButton.vue';\nimport axios from \"axios\";\nexport default {\n  name: \"EarningPage\",\n  components: {\n    BaseGrid,\n    BaseCube,\n    BaseInput,\n    BaseSelect,\n    BaseButton\n  },\n  data() {\n    return {\n      errors: {},\n      model: {},\n      gridData: [{\n        id: 4,\n        category: 'Kita',\n        comment: 'Radau',\n        amount: '0.33'\n      }, {\n        id: 3,\n        category: 'Kita',\n        comment: 'Dovana iš Erikos',\n        amount: '30.00'\n      }, {\n        id: 2,\n        category: 'LitteIffuse',\n        comment: 'Darbo užmokestis',\n        amount: '153.63'\n      }, {\n        id: 1,\n        category: 'Dineta',\n        comment: 'Darbo užmokestis',\n        amount: '1467.48'\n      }],\n      earningByCategory: []\n    };\n  },\n  computed: {\n    ...mapGetters(['isLoading', 'loading', 'formatAmount'])\n  },\n  methods: {\n    ...mapActions(['setLoading', 'unsetLoading']),\n    setAxiosParams() {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('bearer_token')}`;\n      axios.defaults.headers.common['Content-Type'] = 'application/json';\n      axios.defaults.headers.common['Accept'] = 'application/json';\n    },\n    getEarningByCategory() {\n      this.setLoading(['earning-by-category', 'save']);\n      axios.get(`${this.baseUrl}/api/analytics/earning-by-category`).then(response => {\n        console.log(response.data);\n        this.earningByCategory = response.data.data;\n      }).finally(() => {\n        this.unsetLoading(['earning-by-category', 'save']);\n      });\n    }\n  },\n  mounted() {\n    this.setAxiosParams();\n    this.getEarningByCategory();\n  }\n};","map":{"version":3,"mappings":"AAsGA,SAASA,UAAS,QAAS,MAAK;AAChC,SAASC,UAAS,QAAS,MAAK;AAEhC,OAAOC,QAAO,MAAO,oCAAoC;AACzD,OAAOC,QAAO,MAAO,oCAAoC;AACzD,OAAOC,SAAQ,MAAO,qCAAqC;AAC3D,OAAOC,UAAS,MAAO,sCAAsC;AAC7D,OAAOC,UAAS,MAAO,sCAAsC;AAC7D,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE;IACVP,QAAQ;IACRC,QAAQ;IACRC,SAAS;IACTC,UAAU;IACVC;EACF,CAAC;EACDI,IAAI,GAAG;IACL,OAAO;MACLC,MAAM,EAAE,CAAC,CAAC;MACVC,KAAK,EAAE,CAAC,CAAC;MACTC,QAAQ,EAAE,CACR;QACEC,EAAE,EAAE,CAAC;QACLC,QAAQ,EAAE,MAAM;QAChBC,OAAO,EAAE,OAAO;QAChBC,MAAM,EAAE;MACV,CAAC,EACD;QACEH,EAAE,EAAE,CAAC;QACLC,QAAQ,EAAE,MAAM;QAChBC,OAAO,EAAE,kBAAkB;QAC3BC,MAAM,EAAE;MACV,CAAC,EACD;QACEH,EAAE,EAAE,CAAC;QACLC,QAAQ,EAAE,aAAa;QACvBC,OAAO,EAAE,kBAAkB;QAC3BC,MAAM,EAAE;MACV,CAAC,EACD;QACEH,EAAE,EAAE,CAAC;QACLC,QAAQ,EAAE,QAAQ;QAClBC,OAAO,EAAE,kBAAkB;QAC3BC,MAAM,EAAE;MACV,CAAC,CACF;MACDC,iBAAiB,EAAE;IACrB;EACF,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGlB,UAAU,CAAC,CACZ,WAAW,EACX,SAAS,EACT,cAAc,CACf;EACH,CAAC;EAEDmB,OAAO,EAAE;IACP,GAAGpB,UAAU,CAAC,CACZ,YAAY,EACZ,cAAc,CACf,CAAC;IACFqB,cAAc,GAAG;MACfd,KAAK,CAACe,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,IAAK,UAASC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAE,EAAC;MACjGnB,KAAK,CAACe,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,cAAc,IAAI,kBAAiB;MACjEjB,KAAK,CAACe,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,QAAQ,IAAI,kBAAiB;IAC7D,CAAC;IACDG,oBAAoB,GAAG;MACrB,IAAI,CAACC,UAAU,CAAC,CAAC,qBAAqB,EAAE,MAAM,CAAC;MAE/CrB,KAAI,CACCsB,GAAG,CAAE,GAAE,IAAI,CAACC,OAAQ,oCAAmC,EACvDC,IAAI,CAACC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACtB,IAAI,CAAC;QAC1B,IAAI,CAACQ,iBAAgB,GAAIc,QAAQ,CAACtB,IAAI,CAACA,IAAG;MAC5C,CAAC,EACAyB,OAAO,CAAC,MAAM;QACb,IAAI,CAACC,YAAY,CAAC,CAAC,qBAAqB,EAAE,MAAM,CAAC;MACnD,CAAC;IACP;EACF,CAAC;EACDC,OAAO,GAAG;IACR,IAAI,CAAChB,cAAc,EAAE;IACrB,IAAI,CAACM,oBAAoB,EAAE;EAC7B;AACF","names":["mapActions","mapGetters","BaseGrid","BaseCube","BaseInput","BaseSelect","BaseButton","axios","name","components","data","errors","model","gridData","id","category","comment","amount","earningByCategory","computed","methods","setAxiosParams","defaults","headers","common","localStorage","getItem","getEarningByCategory","setLoading","get","baseUrl","then","response","console","log","finally","unsetLoading","mounted"],"sourceRoot":"","sources":["C:\\laragon\\www\\vue\\titobu-v2\\src\\components\\pages\\EarningPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <div class=\"container\">\r\n        <!--        Top Title-->\r\n        <div class=\"row mt-10px\">\r\n          <div class=\"top-text d-flex justify-content-center align-items-center color-green-icon text-center\"><span>{{ formatAmount(earningByCategory.total) }}</span></div>\r\n        </div>\r\n\r\n        <!--        Cube-->\r\n        <div class=\"row\">\r\n          <div v-for=\"(item, index) in earningByCategory\"\r\n               :key=\"index\"\r\n               class=\"col-4 mt-10px\"\r\n          >\r\n            <base-cube\r\n                :title1=\"item.name.toUpperCase()\"\r\n                :title2=\"formatAmount(item.amount)\"\r\n                :bg=\"item.color\"\r\n                @click=\"model.category=item.id\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <!--        Divider-->\r\n        <div class=\"row mt-30px\">\r\n          <div class=\"col-12\">\r\n            <div class=\"divider\"/>\r\n          </div>\r\n        </div>\r\n\r\n        <!--        Form-->\r\n        <div class=\"row mt-30px\">\r\n          <div class=\"col-6\">\r\n            <base-input\r\n                name=\"amount\"\r\n                v-model=\"model.amount\"\r\n                label=\"Suma\"\r\n                :model=\"model\"\r\n                :errors=\"errors\"\r\n            />\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <base-select\r\n                name=\"category\"\r\n                v-model=\"model.category\"\r\n                label=\"Šaltinis\"\r\n                :options=\"categories\"\r\n                :errors=\"errors\"\r\n                :model=\"model\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row mt-10px\">\r\n          <div class=\"col-12\">\r\n            <base-input\r\n                name=\"comment\"\r\n                v-model=\"model.comment\"\r\n                label=\"Komentaras\"\r\n                :model=\"model\"\r\n                :errors=\"errors\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row mt-10px\">\r\n          <div class=\"col-6\">\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <base-button\r\n                name=\"save\"\r\n                label=\"Saugoti\"\r\n                color-name=\"green\"\r\n                @click=\"isLoading(['save'])\r\n                  ? unsetLoading(['save'])\r\n                  : setLoading(['save'])\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <!--        Divider-->\r\n        <div class=\"row mt-30px\">\r\n          <div class=\"col-12\">\r\n            <div class=\"divider\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        <!--        Grid-->\r\n        <div class=\"row mt-30px\">\r\n          <div class=\"col-12\">\r\n            <base-grid\r\n                :items=\"gridData\"\r\n                :headers=\"['Nr.', 'Šaltinis', 'Komentaras', 'Suma']\"\r\n                :columns=\"['id', 'category', 'comment', 'amount']\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from 'vuex'\r\nimport { mapGetters } from 'vuex'\r\n\r\nimport BaseGrid from '@/components/app/grid/BaseGrid.vue';\r\nimport BaseCube from '@/components/app/cube/BaseCube.vue';\r\nimport BaseInput from '@/components/app/form/BaseInput.vue';\r\nimport BaseSelect from '@/components/app/form/BaseSelect.vue';\r\nimport BaseButton from '@/components/app/form/BaseButton.vue';\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"EarningPage\",\r\n  components: {\r\n    BaseGrid,\r\n    BaseCube,\r\n    BaseInput,\r\n    BaseSelect,\r\n    BaseButton,\r\n  },\r\n  data() {\r\n    return {\r\n      errors: {},\r\n      model: {},\r\n      gridData: [\r\n        {\r\n          id: 4,\r\n          category: 'Kita',\r\n          comment: 'Radau',\r\n          amount: '0.33',\r\n        },\r\n        {\r\n          id: 3,\r\n          category: 'Kita',\r\n          comment: 'Dovana iš Erikos',\r\n          amount: '30.00',\r\n        },\r\n        {\r\n          id: 2,\r\n          category: 'LitteIffuse',\r\n          comment: 'Darbo užmokestis',\r\n          amount: '153.63',\r\n        },\r\n        {\r\n          id: 1,\r\n          category: 'Dineta',\r\n          comment: 'Darbo užmokestis',\r\n          amount: '1467.48',\r\n        },\r\n      ],\r\n      earningByCategory: [],\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'isLoading',\r\n      'loading',\r\n      'formatAmount',\r\n    ]),\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions([\r\n      'setLoading',\r\n      'unsetLoading',\r\n    ]),\r\n    setAxiosParams() {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('bearer_token')}`;\r\n      axios.defaults.headers.common['Content-Type'] = 'application/json'\r\n      axios.defaults.headers.common['Accept'] = 'application/json'\r\n    },\r\n    getEarningByCategory() {\r\n      this.setLoading(['earning-by-category', 'save'])\r\n\r\n      axios\r\n          .get(`${this.baseUrl}/api/analytics/earning-by-category`)\r\n          .then(response => {\r\n            console.log(response.data);\r\n            this.earningByCategory = response.data.data\r\n          })\r\n          .finally(() => {\r\n            this.unsetLoading(['earning-by-category', 'save'])\r\n          })\r\n    },\r\n  },\r\n  mounted() {\r\n    this.setAxiosParams();\r\n    this.getEarningByCategory();\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.top-text {\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  font-size: 64px;\r\n  line-height: 77px;\r\n  display: flex;\r\n  align-items: center;\r\n  text-align: center;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}