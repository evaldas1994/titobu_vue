{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = [\"for\"];\nconst _hoisted_2 = [\"id\"];\nconst _hoisted_3 = {\n  key: 0,\n  class: \"font-italic error\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"label\", {\n    for: $props.name,\n    class: \"form-label\"\n  }, _toDisplayString($props.label) + \":\", 9 /* TEXT, PROPS */, _hoisted_1), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: _normalizeClass($options.inputClass),\n    id: $props.name,\n    onInput: _cache[0] || (_cache[0] = $event => _ctx.$emit('update:modelValue', $event.target.value)),\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $props.model[$props.name] = $event)\n  }, null, 42 /* CLASS, PROPS, HYDRATE_EVENTS */, _hoisted_2), [[_vModelText, $props.model[$props.name]]]), $props.errors['name'] ? (_openBlock(), _createElementBlock(\"small\", _hoisted_3, \"Blogai įvestas laukas!\")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;;;;EAUiCA,KAAK,EAAC;;;uBATrCC,oBAUM,cATJC,oBAA0D;IAAlDC,GAAG,EAAEC,WAAI;IAAEJ,KAAK,EAAC;sBAAgBI,YAAK,IAAG,GAAC,oDAClDF,oBAMC;IALGG,IAAI,EAAC,MAAM;IACVL,KAAK,kBAAEM,mBAAU;IACjBC,EAAE,EAAEH,WAAI;IACRI,OAAK,sCAAEC,UAAK,sBAAsBC,MAAM,CAACC,MAAM,CAACC,KAAK;+DAC7CR,YAAK,CAACA,WAAI;8EAAVA,YAAK,CAACA,WAAI,MAEVA,aAAM,0BAAnBH,oBAAqF,SAArFY,UAAqF,EAA9B,wBAAsB","names":["class","_createElementBlock","_createElementVNode","for","$props","type","$options","id","onInput","_ctx","$event","target","value","_hoisted_3"],"sourceRoot":"","sources":["C:\\laragon\\www\\vue\\titobu-v2\\src\\components\\app\\form\\BaseInput.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <label :for=\"name\" class=\"form-label\">{{ label }}:</label>\r\n    <input\r\n        type=\"text\"\r\n        :class=\"inputClass\"\r\n        :id=\"name\"\r\n        @input=\"$emit('update:modelValue', $event.target.value)\"\r\n        v-model=\"model[name]\"\r\n    >\r\n    <small v-if=\"errors['name']\" class=\"font-italic error\">Blogai įvestas laukas!</small>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"BaseInput.vue\",\r\n  data() {\r\n    return {\r\n\r\n    }\r\n  },\r\n  props: {\r\n    name: {\r\n      type: String\r\n    },\r\n    label: {\r\n      type: String\r\n    },\r\n    errors: {\r\n      type: Object,\r\n      default: () => {}\r\n      },\r\n    model: {\r\n      type: Object,\r\n    }\r\n  },\r\n  computed: {\r\n    inputClass() {\r\n      return ['form-control form-field', this.errors.length ? 'error' : null].join(' ')\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}