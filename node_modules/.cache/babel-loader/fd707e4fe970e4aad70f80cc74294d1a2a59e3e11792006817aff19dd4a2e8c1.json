{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n//Finance.js\n//For more information, visit http://financejs.org\n//Copyright 2014 - 2015 Essam Al Joubori, MIT license\n\n// Instantiate a Finance class\nvar Finance = function () {};\n\n// Present Value (PV)\nFinance.prototype.PV = function (rate, cf1, numOfPeriod) {\n  numOfPeriod = typeof numOfPeriod !== 'undefined' ? numOfPeriod : 1;\n  var rate = rate / 100,\n    pv;\n  pv = cf1 / Math.pow(1 + rate, numOfPeriod);\n  return Math.round(pv * 100) / 100;\n};\n\n// Future Value (FV)\nFinance.prototype.FV = function (rate, cf0, numOfPeriod) {\n  var rate = rate / 100,\n    fv;\n  fv = cf0 * Math.pow(1 + rate, numOfPeriod);\n  return Math.round(fv * 100) / 100;\n};\n\n// Net Present Value (NPV)\nFinance.prototype.NPV = function (rate) {\n  var rate = rate / 100,\n    npv = arguments[1];\n  for (var i = 2; i < arguments.length; i++) {\n    npv += arguments[i] / Math.pow(1 + rate, i - 1);\n  }\n  return Math.round(npv * 100) / 100;\n};\n\n// seekZero seeks the zero point of the function fn(x), accurate to within x \\pm 0.01. fn(x) must be decreasing with x.\nfunction seekZero(fn) {\n  var x = 1;\n  while (fn(x) > 0) {\n    x += 1;\n  }\n  while (fn(x) < 0) {\n    x -= 0.01;\n  }\n  return x + 0.01;\n}\n\n// Internal Rate of Return (IRR)\nFinance.prototype.IRR = function (cfs) {\n  var args = arguments;\n  var numberOfTries = 1;\n  // Cash flow values must contain at least one positive value and one negative value\n  var positive, negative;\n  Array.prototype.slice.call(args).forEach(function (value) {\n    if (value > 0) positive = true;\n    if (value < 0) negative = true;\n  });\n  if (!positive || !negative) throw new Error('IRR requires at least one positive value and one negative value');\n  function npv(rate) {\n    numberOfTries++;\n    if (numberOfTries > 1000) {\n      throw new Error('IRR can\\'t find a result');\n    }\n    var rrate = 1 + rate / 100;\n    var npv = args[0];\n    for (var i = 1; i < args.length; i++) {\n      npv += args[i] / Math.pow(rrate, i);\n    }\n    return npv;\n  }\n  return Math.round(seekZero(npv) * 100) / 100;\n};\n\n// Payback Period (PP)\nFinance.prototype.PP = function (numOfPeriods, cfs) {\n  // for even cash flows\n  if (numOfPeriods === 0) {\n    return Math.abs(arguments[1]) / arguments[2];\n  }\n  // for uneven cash flows\n  var cumulativeCashFlow = arguments[1];\n  var yearsCounter = 1;\n  for (i = 2; i < arguments.length; i++) {\n    cumulativeCashFlow += arguments[i];\n    if (cumulativeCashFlow > 0) {\n      yearsCounter += (cumulativeCashFlow - arguments[i]) / arguments[i];\n      return yearsCounter;\n    } else {\n      yearsCounter++;\n    }\n  }\n};\n\n// Return on Investment (ROI)\nFinance.prototype.ROI = function (cf0, earnings) {\n  var roi = (earnings - Math.abs(cf0)) / Math.abs(cf0) * 100;\n  return Math.round(roi * 100) / 100;\n};\n\n// Amortization\nFinance.prototype.AM = function (principal, rate, period, yearOrMonth, payAtBeginning) {\n  var numerator, denominator, am;\n  var ratePerPeriod = rate / 12 / 100;\n\n  // for inputs in years\n  if (!yearOrMonth) {\n    numerator = buildNumerator(period * 12);\n    denominator = Math.pow(1 + ratePerPeriod, period * 12) - 1;\n\n    // for inputs in months\n  } else if (yearOrMonth === 1) {\n    numerator = buildNumerator(period);\n    denominator = Math.pow(1 + ratePerPeriod, period) - 1;\n  } else {\n    console.log('not defined');\n  }\n  am = principal * (numerator / denominator);\n  return Math.round(am * 100) / 100;\n  function buildNumerator(numInterestAccruals) {\n    if (payAtBeginning) {\n      //if payments are made in the beginning of the period, then interest shouldn't be calculated for first period\n      numInterestAccruals -= 1;\n    }\n    return ratePerPeriod * Math.pow(1 + ratePerPeriod, numInterestAccruals);\n  }\n};\n\n// Profitability Index (PI)\nFinance.prototype.PI = function (rate, cfs) {\n  var totalOfPVs = 0,\n    PI;\n  for (var i = 2; i < arguments.length; i++) {\n    var discountFactor;\n    // calculate discount factor\n    discountFactor = 1 / Math.pow(1 + rate / 100, i - 1);\n    totalOfPVs += arguments[i] * discountFactor;\n  }\n  PI = totalOfPVs / Math.abs(arguments[1]);\n  return Math.round(PI * 100) / 100;\n};\n\n// Discount Factor (DF)\nFinance.prototype.DF = function (rate, numOfPeriods) {\n  var dfs = [],\n    discountFactor;\n  for (var i = 1; i < numOfPeriods; i++) {\n    discountFactor = 1 / Math.pow(1 + rate / 100, i - 1);\n    roundedDiscountFactor = Math.ceil(discountFactor * 1000) / 1000;\n    dfs.push(roundedDiscountFactor);\n  }\n  return dfs;\n};\n\n// Compound Interest (CI)\nFinance.prototype.CI = function (rate, numOfCompoundings, principal, numOfPeriods) {\n  var CI = principal * Math.pow(1 + rate / 100 / numOfCompoundings, numOfCompoundings * numOfPeriods);\n  return Math.round(CI * 100) / 100;\n};\n\n// Compound Annual Growth Rate (CAGR)\nFinance.prototype.CAGR = function (beginningValue, endingValue, numOfPeriods) {\n  var CAGR = Math.pow(endingValue / beginningValue, 1 / numOfPeriods) - 1;\n  return Math.round(CAGR * 10000) / 100;\n};\n\n// Leverage Ratio (LR)\nFinance.prototype.LR = function (totalLiabilities, totalDebts, totalIncome) {\n  return (totalLiabilities + totalDebts) / totalIncome;\n};\n\n// Rule of 72\nFinance.prototype.R72 = function (rate) {\n  return 72 / rate;\n};\n\n// Weighted Average Cost of Capital (WACC)\nFinance.prototype.WACC = function (marketValueOfEquity, marketValueOfDebt, costOfEquity, costOfDebt, taxRate) {\n  E = marketValueOfEquity;\n  D = marketValueOfDebt;\n  V = marketValueOfEquity + marketValueOfDebt;\n  Re = costOfEquity;\n  Rd = costOfDebt;\n  T = taxRate;\n  var WACC = E / V * Re / 100 + D / V * Rd / 100 * (1 - T / 100);\n  return Math.round(WACC * 1000) / 10;\n};\n\n// PMT calculates the payment for a loan based on constant payments and a constant interest rate\nFinance.prototype.PMT = function (fractionalRate, numOfPayments, principal) {\n  return -principal * fractionalRate / (1 - Math.pow(1 + fractionalRate, -numOfPayments));\n};\n\n// IAR calculates the Inflation-adjusted return\nFinance.prototype.IAR = function (investmentReturn, inflationRate) {\n  return 100 * ((1 + investmentReturn) / (1 + inflationRate) - 1);\n};\n\n// XIRR - IRR for irregular intervals\nFinance.prototype.XIRR = function (cfs, dts, guess) {\n  if (cfs.length != dts.length) throw new Error('Number of cash flows and dates should match');\n  var positive, negative;\n  Array.prototype.slice.call(cfs).forEach(function (value) {\n    if (value > 0) positive = true;\n    if (value < 0) negative = true;\n  });\n  if (!positive || !negative) throw new Error('XIRR requires at least one positive value and one negative value');\n  guess = !!guess ? guess : 0;\n  var limit = 100; //loop limit\n  var guess_last;\n  var durs = [];\n  durs.push(0);\n\n  //Create Array of durations from First date\n  for (var i = 1; i < dts.length; i++) {\n    durs.push(durYear(dts[0], dts[i]));\n  }\n  do {\n    guess_last = guess;\n    guess = guess_last - sumEq(cfs, durs, guess_last);\n    limit--;\n  } while (guess_last.toFixed(5) != guess.toFixed(5) && limit > 0);\n  var xirr = guess_last.toFixed(5) != guess.toFixed(5) ? null : guess * 100;\n  return Math.round(xirr * 100) / 100;\n};\n\n//Returns Sum of f(x)/f'(x)\nfunction sumEq(cfs, durs, guess) {\n  var sum_fx = 0;\n  var sum_fdx = 0;\n  for (var i = 0; i < cfs.length; i++) {\n    sum_fx = sum_fx + cfs[i] / Math.pow(1 + guess, durs[i]);\n  }\n  for (i = 0; i < cfs.length; i++) {\n    sum_fdx = sum_fdx + -cfs[i] * durs[i] * Math.pow(1 + guess, -1 - durs[i]);\n  }\n  return sum_fx / sum_fdx;\n}\n\n//Returns duration in years between two dates\nfunction durYear(first, last) {\n  return Math.abs(last.getTime() - first.getTime()) / (1000 * 3600 * 24 * 365);\n}\nif (typeof exports !== 'undefined') {\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = Finance;\n    module.exports.Finance = Finance;\n  }\n}","map":{"version":3,"names":["Finance","prototype","PV","rate","cf1","numOfPeriod","pv","Math","pow","round","FV","cf0","fv","NPV","npv","arguments","i","length","seekZero","fn","x","IRR","cfs","args","numberOfTries","positive","negative","Array","slice","call","forEach","value","Error","rrate","PP","numOfPeriods","abs","cumulativeCashFlow","yearsCounter","ROI","earnings","roi","AM","principal","period","yearOrMonth","payAtBeginning","numerator","denominator","am","ratePerPeriod","buildNumerator","console","log","numInterestAccruals","PI","totalOfPVs","discountFactor","DF","dfs","roundedDiscountFactor","ceil","push","CI","numOfCompoundings","CAGR","beginningValue","endingValue","LR","totalLiabilities","totalDebts","totalIncome","R72","WACC","marketValueOfEquity","marketValueOfDebt","costOfEquity","costOfDebt","taxRate","E","D","V","Re","Rd","T","PMT","fractionalRate","numOfPayments","IAR","investmentReturn","inflationRate","XIRR","dts","guess","limit","guess_last","durs","durYear","sumEq","toFixed","xirr","sum_fx","sum_fdx","first","last","getTime","exports","module"],"sources":["C:/laragon/www/vue/titobu-v2/node_modules/financejs/finance.js"],"sourcesContent":["//Finance.js\n//For more information, visit http://financejs.org\n//Copyright 2014 - 2015 Essam Al Joubori, MIT license\n\n// Instantiate a Finance class\nvar Finance = function() {};\n\n// Present Value (PV)\nFinance.prototype.PV = function (rate, cf1, numOfPeriod) {\n  numOfPeriod = typeof numOfPeriod !== 'undefined' ? numOfPeriod : 1;\n  var rate = rate/100, pv;\n  pv = cf1 / Math.pow((1 + rate),numOfPeriod);\n  return Math.round(pv * 100) / 100;\n};\n\n// Future Value (FV)\nFinance.prototype.FV = function (rate, cf0, numOfPeriod) {\n  var rate = rate/100, fv;\n  fv = cf0 * Math.pow((1 + rate), numOfPeriod);\n  return Math.round(fv * 100) / 100;\n};\n\n// Net Present Value (NPV)\nFinance.prototype.NPV = function (rate) {\n  var rate = rate/100, npv = arguments[1];\n  for (var i = 2; i < arguments.length; i++) {\n    npv +=(arguments[i] / Math.pow((1 + rate), i - 1));\n  }\n  return Math.round(npv * 100) / 100;\n};\n\n// seekZero seeks the zero point of the function fn(x), accurate to within x \\pm 0.01. fn(x) must be decreasing with x.\nfunction seekZero(fn) {\n  var x = 1;\n  while (fn(x) > 0) {\n    x += 1;\n  }\n  while (fn(x) < 0) {\n    x -= 0.01\n  }\n  return x + 0.01;\n}\n\n// Internal Rate of Return (IRR)\nFinance.prototype.IRR = function(cfs) {\n  var args = arguments;\n  var numberOfTries = 1;\n  // Cash flow values must contain at least one positive value and one negative value\n  var positive, negative;\n  Array.prototype.slice.call(args).forEach(function (value) {\n    if (value > 0) positive = true;\n    if (value < 0) negative = true;\n  })\n  if (!positive || !negative) throw new Error('IRR requires at least one positive value and one negative value');\n  function npv(rate) {\n    numberOfTries++;\n    if (numberOfTries > 1000) {\n      throw new Error('IRR can\\'t find a result');\n    }\n    var rrate = (1 + rate/100);\n    var npv = args[0];\n    for (var i = 1; i < args.length; i++) {\n      npv += (args[i] / Math.pow(rrate, i));\n    }\n    return npv;\n  }\n  return Math.round(seekZero(npv) * 100) / 100;\n};\n\n// Payback Period (PP)\nFinance.prototype.PP = function(numOfPeriods, cfs) {\n  // for even cash flows\n  if (numOfPeriods === 0) {\n    return Math.abs(arguments[1]) / arguments[2];\n  }\n  // for uneven cash flows\n  var cumulativeCashFlow = arguments[1];\n  var yearsCounter = 1;\n  for (i = 2; i < arguments.length; i++) {\n    cumulativeCashFlow += arguments[i];\n    if (cumulativeCashFlow > 0) {\n      yearsCounter += (cumulativeCashFlow - arguments[i]) / arguments[i];\n      return yearsCounter;\n    } else {\n      yearsCounter++;\n    }\n  }\n};\n\n// Return on Investment (ROI)\nFinance.prototype.ROI = function(cf0, earnings) {\n  var roi = (earnings - Math.abs(cf0)) / Math.abs(cf0) * 100;\n  return Math.round(roi * 100) / 100;\n};\n\n// Amortization\nFinance.prototype.AM = function (principal, rate, period, yearOrMonth, payAtBeginning) {\n  var numerator, denominator, am;\n  var ratePerPeriod = rate / 12 / 100;\n\n  // for inputs in years\n  if (!yearOrMonth) {\n    numerator = buildNumerator(period * 12);\n    denominator = Math.pow((1 + ratePerPeriod), period * 12) - 1;\n\n  // for inputs in months\n  } else if (yearOrMonth === 1) {\n    numerator = buildNumerator(period)\n    denominator = Math.pow((1 + ratePerPeriod), period) - 1;\n\n  } else {\n    console.log('not defined');\n  }\n  am = principal * (numerator / denominator);\n  return Math.round(am * 100) / 100;\n\n  function buildNumerator(numInterestAccruals){\n    if( payAtBeginning ){\n      //if payments are made in the beginning of the period, then interest shouldn't be calculated for first period\n      numInterestAccruals -= 1;\n    }\n    return ratePerPeriod * Math.pow((1 + ratePerPeriod), numInterestAccruals);\n  }\n};\n\n// Profitability Index (PI)\nFinance.prototype.PI = function(rate, cfs){\n  var totalOfPVs = 0, PI;\n  for (var i = 2; i < arguments.length; i++) {\n    var discountFactor;\n    // calculate discount factor\n    discountFactor = 1 / Math.pow((1 + rate/100), (i - 1));\n    totalOfPVs += arguments[i] * discountFactor;\n  }\n  PI = totalOfPVs/Math.abs(arguments[1]);\n  return Math.round(PI * 100) / 100;\n};\n\n// Discount Factor (DF)\nFinance.prototype.DF = function(rate, numOfPeriods) {\n  var dfs = [], discountFactor;\n  for (var i = 1; i < numOfPeriods; i++) {\n    discountFactor = 1 / Math.pow((1 + rate/100), (i - 1));\n    roundedDiscountFactor = Math.ceil(discountFactor * 1000)/1000;\n    dfs.push(roundedDiscountFactor);\n  }\n  return dfs;\n};\n\n// Compound Interest (CI)\nFinance.prototype.CI = function(rate, numOfCompoundings, principal, numOfPeriods) {\n  var CI = principal * Math.pow((1 + ((rate/100)/ numOfCompoundings)), numOfCompoundings * numOfPeriods);\n  return Math.round(CI * 100) / 100;\n};\n\n// Compound Annual Growth Rate (CAGR)\nFinance.prototype.CAGR = function(beginningValue, endingValue, numOfPeriods) {\n  var CAGR = Math.pow((endingValue / beginningValue), 1 / numOfPeriods) - 1;\n  return Math.round(CAGR * 10000) / 100;\n};\n\n// Leverage Ratio (LR)\nFinance.prototype.LR = function(totalLiabilities, totalDebts, totalIncome) {\n  return (totalLiabilities  + totalDebts) / totalIncome;\n};\n\n// Rule of 72\nFinance.prototype.R72 = function(rate) {\n  return 72 / rate;\n};\n\n// Weighted Average Cost of Capital (WACC)\nFinance.prototype.WACC = function(marketValueOfEquity, marketValueOfDebt, costOfEquity, costOfDebt, taxRate) {\n  E = marketValueOfEquity;\n  D = marketValueOfDebt;\n  V =  marketValueOfEquity + marketValueOfDebt;\n  Re = costOfEquity;\n  Rd = costOfDebt;\n  T = taxRate;\n\n  var WACC = ((E / V) * Re/100) + (((D / V) * Rd/100) * (1 - T/100));\n  return Math.round(WACC * 1000) / 10;\n};\n\n// PMT calculates the payment for a loan based on constant payments and a constant interest rate\nFinance.prototype.PMT = function(fractionalRate, numOfPayments, principal) {\n  return -principal * fractionalRate/(1-Math.pow(1+fractionalRate,-numOfPayments))\n};\n\n// IAR calculates the Inflation-adjusted return\nFinance.prototype.IAR = function(investmentReturn, inflationRate){\n  return 100 * (((1 + investmentReturn) / (1 + inflationRate)) - 1);\n}\n\n// XIRR - IRR for irregular intervals\nFinance.prototype.XIRR = function(cfs, dts, guess) {\nif (cfs.length != dts.length) throw new Error('Number of cash flows and dates should match');\n\n  var positive, negative;\n  Array.prototype.slice.call(cfs).forEach(function (value) {\n    if (value > 0) positive = true;\n    if (value < 0) negative = true;\n  });\n\n  if (!positive || !negative) throw new Error('XIRR requires at least one positive value and one negative value');\n  \n\n  guess = !!guess ? guess : 0;\n\n  var limit = 100; //loop limit\n  var guess_last;\n  var durs = [];\n\n  durs.push(0);\n\n  //Create Array of durations from First date\n  for(var i = 1; i < dts.length; i++) {\n    durs.push(durYear(dts[0], dts[i]));\n  }\n  \n  do {\n    guess_last = guess;\n    guess = guess_last - sumEq(cfs, durs, guess_last);\n    limit--;\n    \n  }while(guess_last.toFixed(5) != guess.toFixed(5) && limit > 0);\n\n  var xirr = guess_last.toFixed(5) != guess.toFixed(5) ? null : guess*100;\n\n  return Math.round(xirr * 100) / 100;\n};\n\n//Returns Sum of f(x)/f'(x)\nfunction sumEq(cfs, durs, guess) {\n  var sum_fx = 0;\n  var sum_fdx = 0;\n  for (var i = 0; i < cfs.length; i++) {\n    sum_fx = sum_fx + (cfs[i] / Math.pow(1 + guess, durs[i]));\n  }\n  for ( i = 0; i < cfs.length; i++) {\n    sum_fdx = sum_fdx + (-cfs[i] * durs[i] * Math.pow(1 + guess, -1 - durs[i]));\n  }\n  return sum_fx / sum_fdx;\n}\n\n//Returns duration in years between two dates\nfunction durYear(first, last) {\n  return (Math.abs(last.getTime() - first.getTime()) / (1000 * 3600 * 24 * 365));\n}\n\nif (typeof exports !== 'undefined') {\n  if (typeof module !== 'undefined' && module.exports) {\n      module.exports = Finance;\n      module.exports.Finance = Finance;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}